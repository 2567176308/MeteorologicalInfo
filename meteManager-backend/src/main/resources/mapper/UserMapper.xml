<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shen.meteManagerbackend.dao.UserDao">
    <insert id="insertUser" parameterType="User">
        INSERT INTO tb_user(
        <if test="userName!=null">user_name</if>
        <if test="passWord!=null">,pass_word</if>
        <if test="userMail!=null">,user_mail</if>
        <if test="role!=null">,role</if>
        <if test="isLock!=null">,is_lock</if>
        <if test="isSubscription!=null">,is_subscription</if>
        <if test="address!=null">,address</if>
        <if test="createTime!=null">,create_time</if>
        <if test="updateTime!=null">,update_time</if>
        <if test="deleteTime!=null">,delete_time</if>
            ) VALUES(
        <if test="userName!=null">#{userName}</if>
        <if test="passWord!=null">,#{passWord}</if>
        <if test="userMail!=null">,#{userMail}</if>
        <if test="role">,#{role}</if>
        <if test="isLock!=null">,#{isLock}</if>
        <if test="isSubscription!=null">,#{isSubscription}</if>
        <if test="address!=null">,#{address.adCode}</if>
        <if test="createTime!=null">,#{createTime}</if>
        <if test="updateTime!=null">,#{updateTime}</if>
        <if test="deleteTime!=null">,#{deleteTime}</if>
        );
    </insert>
    <update id="updateUserInfo" parameterType="User">
        UPDATE tb_user
        SET
        <trim suffixOverrides=",">
            <!-- The TRIM element above is used to remove the trailing comma -->
            <if test="userName!=null">user_name = #{userName},</if>
            <if test="passWord!=null">pass_word = #{passWord},</if>
            <if test="role!=null">role = #{role},</if>
            <if test="isSubscription!=null">is_subscription = #{isSubscription},</if>
            <if test="address!=null">address = #{address.adCode},</if>
            <if test="isLock!=null">is_lock = #{isLock},</if>
            <if test="createTime!=null">create_time = #{createTime},</if>
            <if test="updateTime!=null">update_time = #{updateTime},</if>
            <if test="deleteTime!=null">delete_time = #{deleteTime}</if>
        </trim>
        WHERE user_mail = #{userMail}
    </update>


    <update id="deleteUser" parameterType="User">
        UPDATE tb_user
        SET delete_time = #{deleteTime}
        WHERE
        <choose>
            <when test="userId!=null">user_id = #{userId}</when>
            <when test="userMail!=null">user_mail = #{userMail}</when>
        </choose>
    </update>
    <update id="lockOrUnlockUser">
        UPDATE tb_user
        SET is_lock = #{isLock}
        <where>
            <choose>
                <when test="userId!=null">user_id = #{userId}</when>
                <when test="userMail!=null">user_mail = #{userMail}</when>
            </choose>
        </where>

    </update>
    <update id="updateAddressByMail" parameterType="User">
        UPDATE tb_user

        SET address = #{address.adCode}
        WHERE
        user_mail = #{userMail};
    </update>


    <select id="countByMail" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(*) FROM tb_user WHERE user_mail = #{userMail} AND delete_time IS null;
    </select>
    <select id="getUserByEmail" resultType="com.shen.meteManagerbackend.entity.User">
        SELECT * FROM tb_user WHERE user_mail = #{userMail} AND delete_time IS NULL;
    </select>
    <select id="countAddressByMail" resultType="java.lang.Integer">
        SELECT COUNT(address) FROM tb_user WHERE user_mail = #{userMail} AND address IS NOT NULL AND delete_time IS NULL;
    </select>

    <select id="getOrderAddress" resultType="string">
        SELECT DISTINCT address FROM tb_user WHERE address;
    </select>
    <select id="getSubscriptions" resultMap="subscriptionMap">
        SELECT DISTINCT address,user_mail FROM tb_user GROUP BY address,user_mail HAVING address;
    </select>
    
    <resultMap id="subscriptionMap" type="com.shen.meteManagerbackend.entity.Subscription">
        <result property="adCode" column="address" />
        <collection property="emails"  ofType="string">
            <result javaType="java.lang.String" column="user_mail"/>
        </collection>
    </resultMap>
</mapper>